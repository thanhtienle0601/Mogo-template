// size
@mixin size($width, $height: $width) {
    width: $width;
    height: $height;
}
// absoluteCenter
@mixin absoluteCenter($direction: "left", $position: absolute) {
    position: $position;
    @if $direction == "left" {
        left: 50%;
        transform: translateX(-50%);
    }
    @if $direction == "top" {
        top: 50%;
        transform: translateY(-50%);
    }
    @if $direction == "both" {
        left: 50%;
        top: 50%;
        transform: translate(-50%, -50%);
    }
}
// absfull
@mixin absoluteFull() {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
}
// maxWidth responsive
@mixin maxWidth($breakpoint) {
    @media screen and (max-width: $breakpoint){
        @content;
    }
}
// minWidth responsive
@mixin minWidth($breakpoint) {
    @media screen and (min-width: $breakpoint){
        @content;
    }
}
// flexbox
@mixin flexBox($align-item: stretch, $justify-content: flex-start, $direction: row, $flex: flex, $wrap: nowrap) {
    display: $flex;
    align-items: $align-item;
    justify-content: $justify-content;
    flex-direction: $direction;
    flex-wrap: $wrap;
}
// hideScroll
@mixin hideScroll() {
    -ms-overflow-style: none;
    scrollbar-width: none;
    &::-webkit-scrollbar {
     display: none;
    }
}
// textclaim
@mixin textClaim($rows: 1, $size: 100%) {
    display: -webkit-box;
    -webkit-line-clamp: $rows;
    -webkit-box-orient: vertical;
    overflow: hidden;
    text-overflow: ellipsis;
    width: $size;
    max-width: $size;
    white-space: pre-wrap;
    word-break: break-word;
}
// hovereffect
@mixin hoverEffect($itemClass, $contentClass, $transform: "true") {
    #{$itemClass} {
        position: relative;
        z-index: 1;
        & > * {
            transition: transform 0.25s linear;
        }
        &:hover {
            #{$contentClass} {
                opacity: 1;
                visibility: visible;
            }
            @if $transform == "true" {
                & > * {
                    transform: translate(-1rem,-1rem);
                }
                // &:after {
                //     transform: translate(1rem,1rem);
                // }
            }
        }
        @if $transform == "true" {
            &:after {
                content: "";
                @include absoluteFull();
                background-color: $third-color;
                z-index: -1;
                // transition: transform 0.25s linear;
            }
        }
    }
    #{$contentClass} {
        position: absolute;
        top: 0;
        left: 0;
        @include size(100%);
        background: linear-gradient(to bottom, rgba($primary-color,0.9), rgba($secondary-color,0.9));
        z-index: 2;
        @include flexBox(center, center, column);
        opacity: 0;
        visibility: hidden;
        transition: all 0.25s linear;
    }
    
}
// touchSlider
@mixin touchSlider($width: 80%, $gap: 2.5rem, $padding: 1rem) {
    display: grid;
    grid-auto-columns: $width;
    grid-auto-flow: column;
    grid-template-columns: unset;
    overflow-x: auto;
    grid-column-gap: $gap;
    padding: $padding;
    scroll-snap-type: x mandatory;
    scroll-snap-stop: always;
    @include hideScroll;
    & > * {
        scroll-snap-align: center;
        width: auto;
    }
}